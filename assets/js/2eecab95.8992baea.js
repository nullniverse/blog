"use strict";(self.webpackChunknullniverseblog=self.webpackChunknullniverseblog||[]).push([[351],{783:e=>{e.exports=JSON.parse('{"permalink":"/helm-chart-tricks","source":"@site/blog/2024-04-11-helm-chart-tricks/index.mdx","title":"Helm Chart Templating Tricks","description":"Some trick to alleviate the daily Helm burden of managing multiple equal resources in your deployments.","date":"2024-04-11T00:00:00.000Z","tags":[{"inline":true,"label":"blogging","permalink":"/tags/blogging"},{"inline":true,"label":"helm","permalink":"/tags/helm"}],"readingTime":1.73,"hasTruncateMarker":true,"authors":[{"name":"Nullniverse","title":"Vassal @ \u7279\u8d38 Cyber","url":"https://github.com/nullniverse","imageURL":"https://github.com/nullniverse.png","key":"nullniverse","page":null}],"frontMatter":{"slug":"helm-chart-tricks","title":"Helm Chart Templating Tricks","authors":["nullniverse"],"tags":["blogging","helm"]},"unlisted":false,"prevItem":{"title":"Pod Recurrent Restarts via Cronjobs","permalink":"/pod-recurrent-restarts"},"nextItem":{"title":"Github Multi Accounting","permalink":"/github-multiaccount"}}')},7036:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var s=t(783),r=t(4848),a=t(8453);const i={slug:"helm-chart-tricks",title:"Helm Chart Templating Tricks",authors:["nullniverse"],tags:["blogging","helm"]},l=void 0,o={authorsImageUrls:[void 0]},c=[];function m(e){const n={admonition:"admonition",code:"code",em:"em",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Some trick to alleviate the daily Helm burden of managing multiple equal resources in your deployments."})}),"\n","\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"I've been writing a little bit of Helm chart code for my job, because a lot of deployments are outdated and we are migrating our CI/CD pipelines from Drone.io to ArgoCD."}),"\n",(0,r.jsx)(n.p,{children:"Modularity and flow control is a must in order to avoid complexity."}),"\n",(0,r.jsx)(n.p,{children:"Let's go to the example. Below is a modified Ingress recipe template for k8s:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="Ingress modified Helm templating" showLineNumbers',children:'{{- $svcPort := .Values.service.port -}}\n{{- if .Values.ingresses.enabled -}}\n{{- range .Values.ingresses.ingress }}\n// highlight-next-line\n---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: {{ .name }}\n  namespace: {{ .namespace }}\n  labels:\n{{ include "app.labels" $ | indent 4 }}\n  {{- with .annotations }}\n  annotations:\n    {{- toYaml . | nindent 4 }}\n  {{- end }}\nspec:\n{{- if .tls }}\n  tls:\n  {{- range .tls }}\n    - hosts:\n    {{- range .hosts }}\n      - {{ . | quote }}\n    {{- end }}\n      secretName: {{ .secretName }}\n  {{- end }}\n{{- end }}\n  rules:\n{{- range .rules }}\n    - host: {{ .hosts | quote }}\n      http:\n      {{- range .http.paths }}\n        paths:\n          - path: {{ .path | quote }}\n            pathType: {{ .pathType | quote }}\n            backend:\n              service:\n                name: {{ .backend.service.name | quote }}\n                port:\n                  number: {{ .backend.service.port.number | default $svcPort }}   \n      {{- end }}  \n{{- end }}\n{{- end }}\n{{- end }}\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"Note the highlighted line above (4), that allows it to iterate during resource creation generating multiple objects."})}),"\n",(0,r.jsx)(n.p,{children:"It's not only following the API structure for the networking.k8s.io/v1 ingress kind, but it's also modular enough so you can attach and remove ingresses as needed without much hurdle."}),"\n",(0,r.jsxs)(n.p,{children:["Here follows the ",(0,r.jsx)(n.code,{children:"value.yaml"})," example."]}),"\n",(0,r.jsx)(n.p,{children:'It can have a vast number of ingresses each one starting at "name":'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="Multiple ingress objects declared in values.yaml" showLineNumbers',children:'ingresses:\nenabled: true\ningress:\n    - name: ingress-1\n    namespace: namespace\n    annotations:\n    ...\n    tls:\n        - hosts: my.host.com\n        secretName: tls-my-host.com\n    rules:\n        - hosts: my.host.com\n        http:\n            paths:\n            - path: /\n            pathType: Prefix\n            backend:\n                service:\n                name: "service-name"\n                port:\n                    number: 80\n    - name: ingress-2\n'})}),"\n",(0,r.jsx)(n.p,{children:"That's it."})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var s=t(6540);const r={},a=s.createContext(r);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);